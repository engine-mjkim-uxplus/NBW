<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.finalpj.nbw.event.dao.EventMapper">

    <!--========================================== [[ 관리자페이지 신청한 회원 조회 ]] ===============================-->
    <select id="adminPerson" parameterType="int" resultType="eventMemberDto">
        SELECT e.ev_no, m.mem_name, m.mem_email, m.mem_gender, m.mem_phone, m.mem_birthday, m.mem_id
        FROM tb_member m, tb_event e
        WHERE ev_no = #{ev_no} AND mem_id in (
            SELECT mem_id FROM TB_MEMBEREVENT
            WHERE ev_no = #{ev_no})
    </select>
    <!--========================================== [[ 관리자페이지 신청한 회원 거절 ]] ===============================-->
    <update id="adminEventPersonN" parameterType="eventMemberDto">
        UPDATE tb_memberevent
        SET mem_status = 'N'
        WHERE ev_no = #{ev_no} AND mem_id = #{mem_id}
    </update>


    <!--========================================== [[ 관리자페이지 신청한 회원 승인 ]] ===============================-->
    <!-- id와 no번호가 같을때 mem_status 상태를 Y(승인)로 변경한다. -->
    <update id="adminEventPersonY" parameterType="eventMemberDto">
        UPDATE tb_memberevent
        SET mem_status = 'Y'
        WHERE ev_no = #{ev_no} AND mem_id = #{mem_id}
    </update>
    <!--========================================== [[ 신청한 회원 +1 ]] ===============================-->
    <!-- no번호가 같을때 nowpeople을 +1 한다. -->
    <update id="updatePersonY" parameterType="eventMemberDto" >
        UPDATE TB_EVENT
        SET EV_NOWPEOPLE = EV_NOWPEOPLE+1
        WHERE ev_no = #{ev_no} AND  ev_people - ev_nowpeople > 0
    </update>

    <!--============================================ [[ 관리자 이벤트 삭제 ]] ==========================================-->
    <delete id="adminEventDelete" parameterType="int">
        DELETE FROM tb_event WHERE ev_no = #{ev_no}
    </delete>
    <!--이벤트 신청 정보 삭제-->
    <delete id="memberEventDelete" parameterType="int">
        DELETE FROM TB_MEMBEREVENT WHERE ev_no = #{ev_no}
    </delete>
    <!--============================================ [[ 관리자 이벤트 등록 ]] ==========================================-->
    <insert id="eventInsert" parameterType="eventDto">
        INSERT INTO TB_EVENT (
                               ev_no, ev_title, ev_content, ev_file, ev_start
                             , ev_end, ev_people, ev_target
                             , ev_place, ev_time, ev_today, ev_phone, ev_img
        )
        VALUES (SEQ_EV_NO.NEXTVAL, #{ev_title}, #{ev_content}, #{ev_file, jdbcType=VARCHAR}, #{ev_start}
               , #{ev_end}, #{ev_people}, #{ev_target}
               , #{ev_place}, #{ev_time}, #{ev_today}, #{ev_phone}, #{ev_img, jdbcType=VARCHAR})
    </insert>
    <!--============================================ [[ 관리자 이벤트 수정 ]] ==========================================-->
    <update id="adminModify" parameterType="int">
        UPDATE TB_EVENT
        SET  ev_title = #{ev_title}, ev_content = #{ev_content}, ev_file = #{ev_file, jdbcType=VARCHAR}, ev_start = #{ev_start},
             ev_end = #{ev_end}, ev_people = #{ev_people}, ev_target = #{ev_target},
             ev_place = #{ev_place}, ev_time = #{ev_time}, ev_today = #{ev_today}, ev_phone = #{ev_phone}, ev_img = #{ev_img, jdbcType=VARCHAR})
        WHERE ev_no = #{ev_no}
    </update>

    <!--======================================= [[ 이벤트리스트 전체 조회 ]] ======================================-->
    <select id="eventSelectAll" resultType="eventDto">
        SELECT ev_no, ev_title, ev_content, ev_cdate, ev_file, ev_start, ev_end, ev_people
                , ev_nowpeople, ev_target, ev_place, ev_img, ev_time, ev_today, ev_phone, ev_cocnt,
               DECODE(ev_status, 'N', '모집중', 'Y', '마감') as ev_status
        FROM tb_event
        ORDER BY ev_cdate DESC, ev_no DESC
    </select>
    <!--======================================= [[관리자 이벤트리스트 한건 조회 ]] ======================================-->
    <select id="eventSelect" parameterType="int" resultType="eventDto">
        SELECT ev_no, ev_title, ev_content, ev_cdate, ev_file, ev_start, ev_end, ev_people
                , ev_nowpeople, ev_target, ev_place, ev_img, ev_time, ev_today, ev_phone, ev_cocnt,
               DECODE(ev_status, 'N', '모집중', 'Y', '마감') as ev_status
        FROM tb_event
        WHERE ev_no = #{ev_no}
    </select>
    <select id="selectCheckMem" parameterType="int" resultType="eventDto">
    SELECT
    DECODE(M.mem_status, 'N', '거절', 'Y', '승인', '대기') as mem_status
    FROM tb_member e, TB_MEMBEREVENT m
    WHERE e.mem_id in (
    SELECT m.mem_id FROM TB_MEMBEREVENT
    WHERE m.ev_no = #{ev_no})
    </select>

    <select id="selectEvent" parameterType="int" resultType="eventDto">
        SELECT e.ev_no, e.ev_title, e.ev_content, e.ev_cdate, e.ev_file, e.ev_start, e.ev_end,
                e.ev_people, e.ev_nowpeople, e.ev_target, e.ev_place, e.ev_img, e.ev_time,
                e.ev_today, e.ev_phone, e.ev_cocnt,
        DECODE(e.ev_status, 'N', '모집중', 'Y', '마감') as ev_status,
        DECODE(m.mem_status, 'N', '거절', 'Y', '승인', '대기') as mem_status
        FROM tb_event e, tb_memberevent m
        WHERE e.ev_no in (
        SELECT m.ev_no from tb_memberevent
        WHERE m.ev_no = #{ev_no})
    </select>

    <!--========================================== [[ 마이페이지 신청한 전체 이벤트 조회 ]] ===============================-->
    <select id="myEventSelectAll" parameterType="String" resultType="eventDto">
        SELECT DISTINCT e.*, m.mem_id,
                        DECODE(M.mem_status, 'N', '거절', 'Y', '승인', '대기') as mem_status
        FROM tb_event e, TB_MEMBEREVENT m
        WHERE e.ev_no in (
            SELECT m.ev_no FROM TB_MEMBEREVENT
            WHERE m.mem_id = #{mem_id})
    </select>
    <!--=========================================== [[ 이벤트 신청 정보 조회 ]] =====================================-->
    <select id="adminMemberEvent" parameterType="String" resultType="eventMemberDto">
        SELECT mem_id, ev_no,
               DECODE(mem_status, 'N', '거절', 'Y', '승인', '대기') as mem_status
        FROM TB_MEMBEREVENT
        WHERE mem_id = #{mem_id}
    </select>

    <!--============================================ [[ 이벤트 신청 ]] ==========================================-->
    <insert id="eventAdd" parameterType="eventDto">
        INSERT INTO TB_MEMBEREVENT (ev_no, mem_id)
        SELECT #{ev_no}, #{mem_id}
        FROM dual
        WHERE NOT EXISTS (
                SELECT * FROM TB_MEMBEREVENT
                WHERE ev_no = #{ev_no} AND mem_id = #{mem_id}
            )
    </insert>
    <!--============================================ [[ 이벤트 마감 변경 ]] ==========================================-->
    <!-- EV_STATUS = Y 마감                EV_STATUS = N 모집중 -->
    <update id="updateStatusY" parameterType="int">
    UPDATE tb_event
    SET EV_STATUS = 'Y'
    where ev_no = #{ev_no} and ev_people - ev_nowpeople = 0
    </update>
    <update id="updateStatusN" parameterType="int">
        UPDATE tb_event
        SET EV_STATUS = 'N'
        where ev_no = #{ev_no} and ev_people - ev_nowpeople > 0
    </update>
    <!--============================================ [[ 이벤트 신청 확인 ]] ==========================================-->

<!--    <select id="memberEventCnt" parameterType="eventMemberDto">>-->
<!--        select count(*) from TB_MEMBEREVENT-->
<!--        where ev_no = #{ev_no} and mem_id = #{mem_id}-->
<!--    </select>-->
    <select id="memberEventStatus" parameterType="eventMemberDto" resultType="eventMemberDto">
        SELECT DISTINCT e.*, m.mem_id, m.ev_no,
        DECODE(M.mem_status, 'N', '거절', 'Y', '승인', '대기') as mem_status
        FROM tb_member e, TB_MEMBEREVENT m
        WHERE e.mem_id in (
        SELECT m.mem_id FROM TB_MEMBEREVENT
        WHERE m.ev_no = #{ev_no})
    </select>

    <!--  [[ 회원탈퇴 시 이벤트 삭제 ]]	-->
    <delete id="deleteEventByMem" parameterType="member">
        DELETE FROM  TB_MEMBEREVENT WHERE MEM_ID = #{mem_id}
    </delete>
</mapper>